


ARM Macro Assembler    Page 1 


    1 00000000         ; ECE-222 Lab ... Winter 2013 term 
    2 00000000         ; Lab 3 sample code 
    3 00000000                 THUMB                        ; Thumb instruction
                                                             set 
    4 00000000                 AREA             My_code, CODE, READONLY
    5 00000000                 EXPORT           __MAIN
    6 00000000                 ENTRY
    7 00000000         __MAIN
    8 00000000         
    9 00000000         ; The following lines are similar to Lab-1 but use a def
                       ined address to make it easier.
   10 00000000         ; They just turn off all LEDs 
   11 00000000 F8DF A164       LDR              R10, =LED_BASE_ADR ; R10 is a p
                                                            ermenant pointer to
                                                             the base address f
                                                            or the LEDs, offset
                                                             of 0x20 and 0x40 f
                                                            or the ports
   12 00000004 F04F 4330       MOV              R3, #0xB0000000 ; Turn off thre
                                                            e LEDs on port 1  
   13 00000008 F8CA 3020       STR              R3, [R10, #0x20]
   14 0000000C F04F 037C       MOV              R3, #0x0000007C
   15 00000010 F8CA 3040       STR              R3, [R10, #0x40] ; Turn off fiv
                                                            e LEDs on port 2 
   16 00000014         
   17 00000014 F64A 3BCD       MOV              R11, #0xABCD ; Init the random 
                                                            number generator wi
                                                            th a non-zero numbe
                                                            r
   18 00000018 F04F 0000       MOV              R0, #0
   19 0000001C F04F 0100       MOV              R1, #0
   20 00000020 F04F 0600       MOV              R6, #0      ;set the initial va
                                                            lues to 0
   21 00000024         
   22 00000024         ;SIMPLECOUNTER MOV R1,#0x0
   23 00000024         ;COUNTER   BL DISPLAY_NUM
   24 00000024         ;    MOV R0, #1000
   25 00000024         ;    BL DELAY
   26 00000024         ;    ADD R1, #1
   27 00000024         ;    CMP R1, #0xFF
   28 00000024         ;    BNE COUNTER
   29 00000024         ;    BEQ SIMPLECOUNTER   
   30 00000024         
   31 00000024 F000 F863 
                       LOOP    BL               RandomNum
   32 00000028 F36B 0007       BFI              R0, R11, #0, #8 ;get the last 8
                                                             bit of R11 to R0
   33 0000002C F44F 779C       MOV              R7, #0x138
   34 00000030 FB00 F007       MUL              R0,R0, R7   ;make the random nu
                                                            mber into a range o
                                                            f 0 to 80000
   35 00000034 F644 6820       MOV              R8,#20000
   36 00000038 4440            ADD              R0, R8      ;make the range int
                                                            o 20000 to 100000
   37 0000003A F000 F888       BL               DELAY       ;call delay
   38 0000003E F000 F872       BL               LIGHT_ON    ;after delay, turn 
                                                            on light 
   39 00000042 F04F 0400       MOV              R4,#0       ;initial the value 
                                                            of R4 to 0



ARM Macro Assembler    Page 2 


   40 00000046 E7FF            B                POLLING     ;start polling
   41 00000048         
   42 00000048         
   43 00000048         
   44 00000048 F104 0401 
                       POLLING ADD              R4, R4, #1  ;polling counter pl
                                                            us 1
   45 0000004C F04F 0001       MOV              R0,#0x1
   46 00000050 F000 F87D       BL               DELAY       ;call delay functio
                                                            n for 0.1 ms
   47 00000054 F24C 0854       MOV              R8, #0xc054
   48 00000058 F2C2 0809       MOVT             R8,#0x2009
   49 0000005C F8D8 8000       LDR              R8, [R8]    ;get the value of a
                                                            ddress FIO2DIR
   50 00000060 F408 6680       AND              R6, R8, #0x400 ;get the 11th bi
                                                            t into R6
   51 00000064 2E00            CMP              R6,#0x0
   52 00000066 D1EF            BNE              POLLING     ;if button not pres
                                                            sed, back to pollin
                                                            g
   53 00000068 F000 F865       BL               LIGHT_OFF   ;if button pressed,
                                                             turn off the light
                                                             
   54 0000006C         
   55 0000006C         
   56 0000006C         
   57 0000006C 4625    DISPLAYLOOP
                               MOV              R5,R4       ;get the counted re
                                                            action time into R5
                                                            
   58 0000006E F04F 0704       MOV              R7,#0x4     ;initial R7 as 4
   59 00000072         
   60 00000072 F04F 0100 
                       TIMESTEP
                               MOV              R1, #0
   61 00000076 F365 0107       BFI              R1,R5, #0, #8 ;get the right mo
                                                            st 8 bits from R5 i
                                                            nto R1
   62 0000007A EA4F 2515       LSR              R5, #8      ;shift R5 to the ri
                                                            ght for 8 bits to g
                                                            et ready for the ne
                                                            xt 8 bit
   63 0000007E F000 F80D       BL               DISPLAY_NUM ;go to display_num
   64 00000082 F644 6020       MOV              R0, #20000
   65 00000086 F000 F862       BL               DELAY       ;hold the display f
                                                            or 2s
   66 0000008A 3F01            SUBS             R7,#0x1     ;counter minus 1
   67 0000008C D1F1            BNE              TIMESTEP    ;if counter not equ
                                                            al to 0, go back fo
                                                            r the next 8 bits
   68 0000008E F000 F852       BL               LIGHT_OFF   ;of counter goes to
                                                             0, turn light off
   69 00000092 F24C 3050       MOV              R0, #50000
   70 00000096 F000 F85A       BL               DELAY       ;hold light off for
                                                             5s
   71 0000009A E7E7            B                DISPLAYLOOP ;display the number
                                                             again
   72 0000009C         
   73 0000009C         



ARM Macro Assembler    Page 3 


   74 0000009C         
   75 0000009C B506    DISPLAY_NUM
                               STMFD            R13!,{R1, R2, R14}
   76 0000009E F04F 0C00       MOV              R12, #0x0
   77 000000A2 F361 0C04       BFI              R12, R1, #0, #5 ;get the right 
                                                            most 5 bit from R1 
                                                            to R12
   78 000000A6 EA4F 1151       LSR              R1, #5      ;shift right 5 bits
                                                            
   79 000000AA FA9C FCAC       RBIT             R12, R12    ;orbit bits in R12
   80 000000AE F08C 3CFF       EOR              R12, #0xFFFFFFFF ;flip all bits
                                                             in R12
   81 000000B2 EA4F 6CDC       LSR              R12, #27    ;shift left to remo
                                                            ve all the 1s on th
                                                            e right
   82 000000B6 EA4F 0C8C       LSL              R12, #2     ;shift 2 bit left t
                                                            o place the light c
                                                            ontrol bit to the c
                                                            orrect spot
   83 000000BA F8CA C040       STR              R12, [R10,#0x40] ;turn on the l
                                                            ights on port 2
   84 000000BE         
   85 000000BE F04F 0C00       MOV              R12, #0x0   ;reset R12 
   86 000000C2 F361 0C00       BFI              R12, R1, #0, #1 ;get the right 
                                                            most bit into R12
   87 000000C6 EA4F 0151       LSR              R1, #1      ;shift R1 left 1 bi
                                                            t
   88 000000CA EA4F 0C4C       LSL              R12, #1
   89 000000CE F10C 0C01       ADD              R12, #0x1
   90 000000D2 EA4F 0C8C       LSL              R12, #2
   91 000000D6 FA91 F1A1       RBIT             R1, R1
   92 000000DA EA4F 7191       LSR              R1, #30
   93 000000DE 448C            ADD              R12, R12, R1
   94 000000E0 F08C 3CFF       EOR              R12, #0xFFFFFFFF ;make the bit 
                                                            in R5 (eg, ABC) int
                                                            o the form (-C 0 -B
                                                             -A) in R12
   95 000000E4 EA4F 7C0C       LSL              R12, #28    ;place the control 
                                                            bit on the right sp
                                                            ot
   96 000000E8 F8CA C020       STR              R12, [R10,#0x20] ;turn on light
                                                            s on port 1
   97 000000EC         
   98 000000EC BD06            LDMFD            R13!,{R1, R2, R15}
   99 000000EE         
  100 000000EE         ;
  101 000000EE         ; R11 holds a 16-bit random number via a pseudo-random s
                       equence as per the Linear feedback shift register (Fibon
                       acci) on WikiPedia
  102 000000EE         ; R11 holds a non-zero 16-bit number.  If a zero is fed 
                       in the pseudo-random sequence will stay stuck at 0
  103 000000EE         ; Take as many bits of R11 as you need.  If you take the
                        lowest 4 bits then you get a number between 1 and 15.
  104 000000EE         ;   If you take bits 5..1 you'll get a number between 0 
                       and 15 (assuming you right shift by 1 bit).
  105 000000EE         ; R11 MUST be initialized to a non-zero 16-bit value at 
                       the start of the program OR ELSE!
  106 000000EE         ; R11 can be read anywhere in the code but must only be 
                       written to by this subroutine



ARM Macro Assembler    Page 4 


  107 000000EE B50E    RandomNum
                               STMFD            R13!,{R1, R2, R3, R14}
  108 000000F0         
  109 000000F0 F40B 4100       AND              R1, R11, #0x8000
  110 000000F4 F40B 5200       AND              R2, R11, #0x2000
  111 000000F8 EA4F 0282       LSL              R2, #2
  112 000000FC EA81 0302       EOR              R3, R1, R2
  113 00000100 F40B 5180       AND              R1, R11, #0x1000
  114 00000104 EA4F 01C1       LSL              R1, #3
  115 00000108 EA83 0301       EOR              R3, R3, R1
  116 0000010C F40B 6180       AND              R1, R11, #0x0400
  117 00000110 EA4F 1141       LSL              R1, #5
  118 00000114 EA83 0301       EOR              R3, R3, R1  ; the new bit to go
                                                             into the LSB is pr
                                                            esent
  119 00000118 EA4F 33D3       LSR              R3, #15
  120 0000011C EA4F 0B4B       LSL              R11, #1
  121 00000120 EA4B 0B03       ORR              R11, R11, R3
  122 00000124         
  123 00000124 BD0E            LDMFD            R13!,{R1, R2, R3, R15}
  124 00000126         
  125 00000126         
  126 00000126 B508    LIGHT_ON
                               STMFD            R13!,{R3, R14} ; preserve R3 an
                                                            d R4 on the R13 sta
                                                            ck
  127 00000128 F04F 0300       MOV              R3, #0x0000
  128 0000012C F2CA 0300       MOVT             R3, #0xA000
  129 00000130 F8CA 3020       STR              R3, [R10,#0x20]
  130 00000134 BD08            LDMFD            R13!,{R3, R15}
  131 00000136 B508    LIGHT_OFF
                               STMFD            R13!,{R3, R14} ; push R3 and Li
                                                            nk Register (return
                                                             address) on stack
  132 00000138 F04F 0300       MOV              R3, #0x0000
  133 0000013C F2CB 0300       MOVT             R3, #0xB000
  134 00000140 F8CA 3020       STR              R3, [R10,#0x20]
  135 00000144 F04F 037C       MOV              R3, #0x007C
  136 00000148 F8CA 3040       STR              R3, [R10, #0x40]
  137 0000014C BD08            LDMFD            R13!,{R3, R15} ; restore R3 and
                                                             LR to R15 the Prog
                                                            ram Counter to retu
                                                            rn
  138 0000014E         
  139 0000014E B505    DELAY   STMFD            R13!,{R2,R0, R14}
  140 00000150         MultipleDelay
  141 00000150         LOOP2
  142 00000150 F04F 027F       MOV              R2, #0x7F   ;set a 0.1ms inside
                                                             deplay counter
  143 00000154         LOOP3
  144 00000154 3A01            SUBS             R2,#1
  145 00000156 D1FD            BNE              LOOP3       ;delay for 0.1ms
  146 00000158         
  147 00000158 F1A0 0001       SUB              R0,#0x1
  148 0000015C F090 0F00       TEQ              R0, #0x0
  149 00000160 D1F6            BNE              LOOP2       ;if the outside dep
                                                            lay counter is not 
                                                            zero, run another o
                                                            .1ms delay



ARM Macro Assembler    Page 5 


  150 00000162 D0FF            BEQ              exitDelay   ;if zero, finish de
                                                            lay
  151 00000164         
  152 00000164 BD05    exitDelay
                               LDMFD            R13!,{R2,R0, R15}
  153 00000166         
  154 00000166         
  155 00000166         
  156 00000166         
  157 00000166 2009C000 
                       LED_BASE_ADR
                               EQU              0x2009c000  ; Base address of t
                                                            he memory that cont
                                                            rols the LEDs 
  158 00000166 4002C00C 
                       PINSEL3 EQU              0x4002c00c  ; Address of Pi n S
                                                            elect Register 3 fo
                                                            r P1[31:16]
  159 00000166 4002C010 
                       PINSEL4 EQU              0x4002c010  ; Address of Pin Se
                                                            lect Register 4 for
                                                             P2[15:0]
  160 00000166         ; Usefull GPIO Registers
  161 00000166         ; FIODIR  - register to set individual pins as input or 
                       output
  162 00000166         ; FIOPIN  - register to read and write pins
  163 00000166         ; FIOSET  - register to set I/O pins to 1 by writing a 1
                       
  164 00000166         ; FIOCLR  - register to clr I/O pins to 0 by writing a 1
                       
  165 00000166         
  166 00000166 00 00           ALIGN
  167 00000168         
  168 00000168                 END
              2009C000 
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=Lab_3_pr
ogram.d -oLab_3_program.o -IC:\Software\Keil\ARM\RV31\INC -IC:\Software\Keil\AR
M\CMSIS\Include -IC:\Software\Keil\ARM\Inc\NXP\LPC17xx --list=Lab_3_program.lst
 Lab_3_program.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DELAY 0000014E

Symbol: DELAY
   Definitions
      At line 139 in file Lab_3_program.s
   Uses
      At line 37 in file Lab_3_program.s
      At line 46 in file Lab_3_program.s
      At line 65 in file Lab_3_program.s
      At line 70 in file Lab_3_program.s

DISPLAYLOOP 0000006C

Symbol: DISPLAYLOOP
   Definitions
      At line 57 in file Lab_3_program.s
   Uses
      At line 71 in file Lab_3_program.s
Comment: DISPLAYLOOP used once
DISPLAY_NUM 0000009C

Symbol: DISPLAY_NUM
   Definitions
      At line 75 in file Lab_3_program.s
   Uses
      At line 63 in file Lab_3_program.s
Comment: DISPLAY_NUM used once
LIGHT_OFF 00000136

Symbol: LIGHT_OFF
   Definitions
      At line 131 in file Lab_3_program.s
   Uses
      At line 53 in file Lab_3_program.s
      At line 68 in file Lab_3_program.s

LIGHT_ON 00000126

Symbol: LIGHT_ON
   Definitions
      At line 126 in file Lab_3_program.s
   Uses
      At line 38 in file Lab_3_program.s
Comment: LIGHT_ON used once
LOOP 00000024

Symbol: LOOP
   Definitions
      At line 31 in file Lab_3_program.s
   Uses
      None
Comment: LOOP unused
LOOP2 00000150

Symbol: LOOP2
   Definitions
      At line 141 in file Lab_3_program.s
   Uses
      At line 149 in file Lab_3_program.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Comment: LOOP2 used once
LOOP3 00000154

Symbol: LOOP3
   Definitions
      At line 143 in file Lab_3_program.s
   Uses
      At line 145 in file Lab_3_program.s
Comment: LOOP3 used once
MultipleDelay 00000150

Symbol: MultipleDelay
   Definitions
      At line 140 in file Lab_3_program.s
   Uses
      None
Comment: MultipleDelay unused
My_code 00000000

Symbol: My_code
   Definitions
      At line 4 in file Lab_3_program.s
   Uses
      None
Comment: My_code unused
POLLING 00000048

Symbol: POLLING
   Definitions
      At line 44 in file Lab_3_program.s
   Uses
      At line 40 in file Lab_3_program.s
      At line 52 in file Lab_3_program.s

RandomNum 000000EE

Symbol: RandomNum
   Definitions
      At line 107 in file Lab_3_program.s
   Uses
      At line 31 in file Lab_3_program.s
Comment: RandomNum used once
TIMESTEP 00000072

Symbol: TIMESTEP
   Definitions
      At line 60 in file Lab_3_program.s
   Uses
      At line 67 in file Lab_3_program.s
Comment: TIMESTEP used once
__MAIN 00000000

Symbol: __MAIN
   Definitions
      At line 7 in file Lab_3_program.s
   Uses
      At line 5 in file Lab_3_program.s
Comment: __MAIN used once
exitDelay 00000164



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols


Symbol: exitDelay
   Definitions
      At line 152 in file Lab_3_program.s
   Uses
      At line 150 in file Lab_3_program.s
Comment: exitDelay used once
15 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

LED_BASE_ADR 2009C000

Symbol: LED_BASE_ADR
   Definitions
      At line 157 in file Lab_3_program.s
   Uses
      At line 11 in file Lab_3_program.s
Comment: LED_BASE_ADR used once
PINSEL3 4002C00C

Symbol: PINSEL3
   Definitions
      At line 158 in file Lab_3_program.s
   Uses
      None
Comment: PINSEL3 unused
PINSEL4 4002C010

Symbol: PINSEL4
   Definitions
      At line 159 in file Lab_3_program.s
   Uses
      None
Comment: PINSEL4 unused
3 symbols
350 symbols in table
